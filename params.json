{"name":"Vehicle Inventory Management - A Technical Design Document ","tagline":"Backend solution to support vehicle inventory maintenance. ","body":"### Overview\r\nWe will create a vehicle inventory management system to support front-end clients' needs which include the following use-cases : \r\n1. Dealership web site support for viewing data related to vehicle inventory via an existing CMS application.  \r\n2. Updating inventory data via an existing admin app. \r\n\r\n\r\n### Assumptions\r\nEnvironment\r\nWe have production and non-production aws accounts with full access in the non-prod accounts to create, modify, and deliver our solution.\r\n\r\nTeam Experience\r\nWe have a team of developers that are familiar with \r\n1. fluent in cicd tooling (terraform, codebuild, roles and policies, proper tagging, and Cloudwatch monitoring/alerting. \r\n2. fluent in the following languages: Python and NodeJS\r\n\r\nData\r\n1. Each payload (file) represents ALL the inventory for an individual dealer.  \r\n2. Dealers are allowed only one feed per 24 hours period.  \r\n2. The dealer id is embedded in the filename, adhering to pre-defined naming conventions. \r\n \r\n3. Dealers have been vetted and are managed in separate systems.  Access to dealer contact info is available to our solution.\r\n3. If a dealer id is not valid, the system will discard the feed for that \"unknown\" dealer. \r\n1. Industry standards exist to define appropriate values for vehicle properties based on OEM build specs.  \r\n2. Inventory feeds are received nightly in a csv format. \r\n3. The processing and syndication of feeds does not take longer than a 24 hour window. \r\n4. Feeds taking longer then the predefined window shall be treated as stale and appropriate notifications shall be sent. \r\n5. The processing and syndication of feeds will not negatively effect client application performance.\r\n6. The order in which payloads are received is not significant.  \r\n7. Redundant feeds do not cause adverse effects to overall inventory.  (updating inventory should be idempotent)\r\n6. Sourced inventory data should be scrubbed and validated, setting aside invalid payloads and notifying the authors of such payloads. \r\n    a.  Validation Rules  (all fields are REQUIRED)\r\n        i.  Year -> 4 digit valid year (Years may include future)\r\n        ii. Make -> industry standard values and abbreviations\r\n        iii.  Model -> industry standard values and abbreviations\r\n        iv.  BodyStyle -> industry standard values and abbreviations\r\n        v.  vin ->  must be a valid vin (leverage existing vin validation routines)\r\n        vi.  color ->  as defined by the oem\r\n        vii. mileage -> round up to whole number\r\n        viii.  msrp ->  with 2 digits after decimal point\r\n        ix.  asking_price ->  with 2 digits after decimal point\r\n\r\nInventory Management API\r\nClient applications will access inventory data via a published api leveraging GraphQL. \r\n    Why GraphQL over REST?   \r\n        GraphQL appears to best-fit for the existing client applications and use-cases.  Clients retrieve exactly what they need and no more.  This is done through pre-defined contracts depicting all the available data the client will have access to.  \r\nIn addition, the number of requests is mitigated because the backend will pull from any number of tables to build and tailor the response.  \r\n        \r\n\r\nAudience and Traffic\r\nPeak hours for client activity occurs during standard business hours (8am to 7pm EST).\r\nSourced inventory data should be validated, setting aside invalid payloads and notifying the authors of such payloads. This requires \"saving\" the invalid payloads \"as-is\" for further investigative actions. \r\n\r\n\r\n \r\n\r\n \r\n \r\n\r\n\r\n### Considerations\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Inventory Feeds and Dataload\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Inventory Management API\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}